---

#
# example playbook to handle a secret within vault
# limited to use from deploy host
#

- hosts: vault_servers
  gather_facts: False
  vars:
    cryptoa_ssh_root_private: 'secret/local/cryptoa/ssh/root/private'
    cryptoa_ssh_root_public:  'secret/local/cryptoa/ssh/root/public'

  tasks:

# Write SSH key
  - name: Create temp dir
    file:   
      state=directory
      path=/tmp/.ssh
      owner=root
      group=root
      mode=0750

  - name: Generate SSH key
    shell: ssh-keygen -b 4096 -t rsa -f /tmp/.ssh/id_rsa -q -N ""
    args:
      creates: /tmp/.ssh/id_rsa
    run_once: true

  - name: Store SSH private key within vault
    shell: source /etc/profile; vault write "{{ cryptoa_ssh_root_private }}" key=$(cat /tmp/.ssh/id_rsa | base64 -w0 ) ttl=-1
    run_once: true

  - name: Store SSH public key within vault
    shell: source /etc/profile; vault write "{{ cryptoa_ssh_root_public }}" key=$(cat /tmp/.ssh/id_rsa.pub | base64 -w0 ) ttl=-1
    run_once: true

  - name: Remove temp dir
    file:   
      state=absent
      path=/tmp/.ssh
    run_once: true


# Read SSH key - using client
  - name: Read SSH public key
    shell: source /etc/profile; vault read -field=key "{{ cryptoa_ssh_root_public }}" | base64 -d
    register: my_key
    run_once: true

  - name: Write key to file
    shell: echo "{{ my_key.stdout }}" > /tmp/id_rsa.pub
    run_once: true


# Read SSH key - using REST API
  # We need vault client here because of limitations deviate from security concept 
  - name: Get token
    shell: source /etc/profile; vault read -field id auth/token/lookup-self
    register: my_token
    run_once: true

  - name: Read SSH private key
    uri:
      url: "http://{{ vault_addr }}:8200/v1/{{ cryptoa_ssh_root_private }}"
      HEADER_X-Vault-Token: "{{ my_token.stdout }}"
      method: GET
      return_content: yes
    register: output
    delegate_to: localhost
    run_once: true

  - name: Parse json output
    set_fact:
      creds: "{{ output.content|from_json }}"
    run_once: true

  - name: Decode base64
    shell: echo "{{ creds.data.key }}" | base64 -d
    register: my_key
    run_once: true

  - name: Write key to file
    shell: echo "{{ my_key.stdout }}" > /tmp/id_rsa
    run_once: true

  # - debug: msg="{{ cryptoa_ssh_root_private }} is {{ my_key.stdout }}"
